spring.application.name=authentication
server.port=60601
env=${ENV:dev}
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/authentication}
spring.datasource.username=${POSTGRES_USER:user}
spring.datasource.password=${POSTGRES_PASSWORD:password}
# JPA settings
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

// kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9094}
kafka.topic.request-topic=${REQUEST_TOPIC:requestt}
kafka.topic.response-topic=${RESPONSE_TOPIC:response}

# Consumer settings
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:auth}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Producer settings
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
